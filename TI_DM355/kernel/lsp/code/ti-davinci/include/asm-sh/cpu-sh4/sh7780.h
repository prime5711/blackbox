#ifndef __ASM_SH_CPU_SH4_SH7780_H
#define __ASM_SH_CPU_SH4_SH7780_H
/*
 * linux/include/asm-sh/cpu-sh4a/sh7780.h
 *
 * Copyright (C) 2005 Takashi Kusuda (Feb 4, 2005)
 */


/* INTC register */
#define INTC_ICR0		0xFFD00000
#define INTC_INTPRI		0xFFD00010
#define INTC_ICR1		0xFFD0001C
#define INTC_INTREQ		0xFFD00024
#define INTC_INTMSK0		0xFFD00044
#define INTC_INTMSK1		0xFFD00048
#define INTC_INTMSK2		0xFFD40080
#define INTC_INTMSKCLR0		0xFFD00064
#define INTC_INTMSKCLR1		0xFFD00068
#define INTC_INTMSKCLR2 	0xFFD40084
#define INTC_INTNMICR		0xFFD000C0
#define INTC_USERIMASK  	0xFFD30000

/* INTC2 register */
#define INTC_INT2PRI0		0xFFD40000
#define INTC_INT2PRI1		0xFFD40004
#define INTC_INT2PRI2		0xFFD40008
#define INTC_INT2PRI3		0xFFD4000C
#define INTC_INT2PRI4		0xFFD40010
#define INTC_INT2PRI5		0xFFD40014
#define INTC_INT2PRI6		0xFFD40018
#define INTC_INT2PRI7		0xFFD4001C

#define INTC_INT2A0		0xFFD40030
#define INTC_INT2A1		0xFFD40034
#define INTC_INT2MSKRG		0xFFD40038
#define INTC_INT2MSKCR		0xFFD4003C
#define INTC_INT2B0		0xFFD40040
#define INTC_INT2B1		0xFFD40044
#define INTC_INT2B2		0xFFD40048
#define INTC_INT2B3		0xFFD4004C
#define INTC_INT2B4		0xFFD40050
#define INTC_INT2B5		0xFFD40054
#define INTC_INT2B6		0xFFD40058
#define INTC_INT2B7		0xFFD4005C

#define INTC_INT2GPIC		0xFFD40090


/* Timer IRQ */
#define TIMER_IRQ	INTEVT2_TO_IRQ(0x580)
#define TIMER1_IRQ	INTEVT2_TO_IRQ(0x5A0)
#define TIMER2_IRQ	INTEVT2_TO_IRQ(0x5C0)

/* SH DMAC */
#define DMTE0_IRQ	INTEVT2_TO_IRQ(0x640)
#define DMTE4_IRQ	INTEVT2_TO_IRQ(0x780)
#define DMTE8_IRQ	INTEVT2_TO_IRQ(0xD80)
#define DMAE_IRQ	INTEVT2_TO_IRQ(0x6C0)


/* IPR Initialize info table */
#define SH4A_INTC2_INIT_TABLE  \
{ \
	/* IPRA */ \
	{TIMER_IRQ, INTC_INT2MSKRG, INTC_INT2MSKCR, 0}, /* TMU0 */ \
	{TIMER1_IRQ, INTC_INT2MSKRG, INTC_INT2MSKCR, 0}, /* TMU1 */ \
	{TIMER2_IRQ, INTC_INT2MSKRG, INTC_INT2MSKCR, 0}, /* TMU2 */ \
	{INTEVT2_TO_IRQ(0x5E0), INTC_INT2MSKRG, INTC_INT2MSKCR, 0}, /* TMU2IC */ \
\
	{INTEVT2_TO_IRQ(0xE00), INTC_INT2MSKRG, INTC_INT2MSKCR, 1}, /* TMU3 */ \
	{INTEVT2_TO_IRQ(0xE20), INTC_INT2MSKRG, INTC_INT2MSKCR, 1}, /* TMU4 */ \
	{INTEVT2_TO_IRQ(0xE40), INTC_INT2MSKRG, INTC_INT2MSKCR, 1}, /* TMU5 */ \
\
	{INTEVT2_TO_IRQ(0x480), INTC_INT2MSKRG, INTC_INT2MSKCR, 2}, /* RTC ati */ \
	{INTEVT2_TO_IRQ(0x4A0), INTC_INT2MSKRG, INTC_INT2MSKCR, 2}, /* RTC pri */ \
	{INTEVT2_TO_IRQ(0x4C0), INTC_INT2MSKRG, INTC_INT2MSKCR, 2}, /* RTC cui */ \
\
	{INTEVT2_TO_IRQ(0x700), INTC_INT2MSKRG, INTC_INT2MSKCR, 3}, /* SCIF0 eri */ \
	{INTEVT2_TO_IRQ(0x720), INTC_INT2MSKRG, INTC_INT2MSKCR, 3}, /* SCIF0 rxi */ \
	{INTEVT2_TO_IRQ(0x740), INTC_INT2MSKRG, INTC_INT2MSKCR, 3}, /* SCIF0 bri */ \
	{INTEVT2_TO_IRQ(0x760), INTC_INT2MSKRG, INTC_INT2MSKCR, 3}, /* SCIF0 txi */ \
\
	{INTEVT2_TO_IRQ(0xB80), INTC_INT2MSKRG, INTC_INT2MSKCR, 4}, /* SCIF1 eri */ \
	{INTEVT2_TO_IRQ(0xBA0), INTC_INT2MSKRG, INTC_INT2MSKCR, 4}, /* SCIF1 rxi */ \
	{INTEVT2_TO_IRQ(0xBC0), INTC_INT2MSKRG, INTC_INT2MSKCR, 4}, /* SCIF1 bri */ \
	{INTEVT2_TO_IRQ(0xBE0), INTC_INT2MSKRG, INTC_INT2MSKCR, 4}, /* SCIF1 txi */ \
\
	{INTEVT2_TO_IRQ(0x560), INTC_INT2MSKRG, INTC_INT2MSKCR, 5}, /* WDT */ \
\
	{DMTE0_IRQ, INTC_INT2MSKRG, INTC_INT2MSKCR, 8},		   /* SuperHwy DMAC0 */ \
	{INTEVT2_TO_IRQ(0x660), INTC_INT2MSKRG, INTC_INT2MSKCR, 8}, /* SuperHwy DMAC1 */ \
	{INTEVT2_TO_IRQ(0x680), INTC_INT2MSKRG, INTC_INT2MSKCR, 8}, /* SuperHwy DMAC2 */ \
	{INTEVT2_TO_IRQ(0x6A0), INTC_INT2MSKRG, INTC_INT2MSKCR, 8}, /* SuperHwy DMAC3 */ \
	{DMTE4_IRQ, INTC_INT2MSKRG, INTC_INT2MSKCR, 8},		   /* SuperHwy DMAC4 */ \
	{INTEVT2_TO_IRQ(0x7A0), INTC_INT2MSKRG, INTC_INT2MSKCR, 8}, /* SuperHwy DMAC5 */ \
	{DMAE_IRQ, INTC_INT2MSKRG, INTC_INT2MSKCR, 8}, /* SuperHwy DMAC dmae */ \
\
	{INTEVT2_TO_IRQ(0x7C0), INTC_INT2MSKRG, INTC_INT2MSKCR, 9}, /* SuperHwy DMAC6 */ \
	{INTEVT2_TO_IRQ(0x7E0), INTC_INT2MSKRG, INTC_INT2MSKCR, 9}, /* SuperHwy DMAC7 */ \
	{DMTE8_IRQ, INTC_INT2MSKRG, INTC_INT2MSKCR, 9},		   /* SuperHwy DMAC8 */ \
	{INTEVT2_TO_IRQ(0xDA0), INTC_INT2MSKRG, INTC_INT2MSKCR, 9}, /* SuperHwy DMAC9 */ \
	{INTEVT2_TO_IRQ(0xDC0), INTC_INT2MSKRG, INTC_INT2MSKCR, 9}, /* SuperHwy DMAC10 */ \
	{INTEVT2_TO_IRQ(0xDE0), INTC_INT2MSKRG, INTC_INT2MSKCR, 9}, /* SuperHwy DMAC11 */ \
\
	{INTEVT2_TO_IRQ(0x900), INTC_INT2MSKRG, INTC_INT2MSKCR, 12},/* CMT */ \
\
	{INTEVT2_TO_IRQ(0xA00), INTC_INT2MSKRG, INTC_INT2MSKCR, 14},/* PCI SERR */ \
	{INTEVT2_TO_IRQ(0xA20), INTC_INT2MSKRG, INTC_INT2MSKCR, 15},/* PCI INTA */ \
	{INTEVT2_TO_IRQ(0xA40), INTC_INT2MSKRG, INTC_INT2MSKCR, 16},/* PCI INTB */ \
	{INTEVT2_TO_IRQ(0xA60), INTC_INT2MSKRG, INTC_INT2MSKCR, 17},/* PCI INTC */ \
	{INTEVT2_TO_IRQ(0xA80), INTC_INT2MSKRG, INTC_INT2MSKCR, 18},/* PCI INTD */ \
	{INTEVT2_TO_IRQ(0xAA0), INTC_INT2MSKRG, INTC_INT2MSKCR, 19},/* PCI ERR */ \
	{INTEVT2_TO_IRQ(0xAC0), INTC_INT2MSKRG, INTC_INT2MSKCR, 19},/* PCI PWD3 */ \
	{INTEVT2_TO_IRQ(0xAE0), INTC_INT2MSKRG, INTC_INT2MSKCR, 19},/* PCI PWD2 */ \
	{INTEVT2_TO_IRQ(0xB00), INTC_INT2MSKRG, INTC_INT2MSKCR, 19},/* PCI PWD1 */ \
	{INTEVT2_TO_IRQ(0xB20), INTC_INT2MSKRG, INTC_INT2MSKCR, 19},/* PCI PWD0 */ \
\
	{INTEVT2_TO_IRQ(0xC00), INTC_INT2MSKRG, INTC_INT2MSKCR, 20},/* SIOF */ \
\
	{INTEVT2_TO_IRQ(0xD00), INTC_INT2MSKRG, INTC_INT2MSKCR, 22},/* MMC fstat */ \
	{INTEVT2_TO_IRQ(0xD20), INTC_INT2MSKRG, INTC_INT2MSKCR, 22},/* MMC tran */ \
	{INTEVT2_TO_IRQ(0xD40), INTC_INT2MSKRG, INTC_INT2MSKCR, 22},/* MMC err */ \
	{INTEVT2_TO_IRQ(0xD60), INTC_INT2MSKRG, INTC_INT2MSKCR, 22},/* MMC frdy */ \
\
	{INTEVT2_TO_IRQ(0xE80), INTC_INT2MSKRG, INTC_INT2MSKCR, 23},/* SSI */ \
\
	{INTEVT2_TO_IRQ(0xF00), INTC_INT2MSKRG, INTC_INT2MSKCR, 24},/* FLCTL flste */ \
	{INTEVT2_TO_IRQ(0xF20), INTC_INT2MSKRG, INTC_INT2MSKCR, 24},/* FLCTL fltend */ \
	{INTEVT2_TO_IRQ(0xF40), INTC_INT2MSKRG, INTC_INT2MSKCR, 24},/* FLCTL fltrq0 */ \
	{INTEVT2_TO_IRQ(0xF60), INTC_INT2MSKRG, INTC_INT2MSKCR, 24},/* FLCTL fltrq1 */ \
\
	{INTEVT2_TO_IRQ(0xF80), INTC_INT2MSKRG, INTC_INT2MSKCR, 25},/* GPIO0 */ \
	{INTEVT2_TO_IRQ(0xFA0), INTC_INT2MSKRG, INTC_INT2MSKCR, 25},/* GPIO1 */ \
	{INTEVT2_TO_IRQ(0xFC0), INTC_INT2MSKRG, INTC_INT2MSKCR, 25},/* GPIO2 */ \
	{INTEVT2_TO_IRQ(0xFE0), INTC_INT2MSKRG, INTC_INT2MSKCR, 25},/* GPIO3 */ \
\
	/* End */ \
	{0, 0, 0, 0} \
}

/*
 * INTC2 controled by INTMSK reg/INTMSKCR reg.
 * So, interrupt priority set at first. (This priority not change)
 */
#define SH4A_INTC2_PRIORITY_SETTING { \
  ctrl_outl(0x1E040404, INTC_INT2PRI0); /* TMU0-ch0/TMU0-ch1/TMU0-ch2/TMU0-ch2IC */ \
  ctrl_outl(0x04040404, INTC_INT2PRI1); /* TMU0-ch3/TMU0-ch4/TMU0-ch5/RTC */ \
  ctrl_outl(0x0E0E0400, INTC_INT2PRI2); /* SCIF0/SCIF1/WDT/reserve */ \
  ctrl_outl(0x00090900, INTC_INT2PRI3); /* H-UDI/SHwy-DMAC0/SHwy-DMAC1/reserve */ \
  ctrl_outl(0x04000614, INTC_INT2PRI4); /* CMT/HAC/PCIC0/PCIC1 */ \
  ctrl_outl(0x16181A00, INTC_INT2PRI5); /* PCIC2/PCIC3/PCIC4/PCIC5 */ \
  ctrl_outl(0x0A00040A, INTC_INT2PRI6); /* SIOF/HSPI/MMC/SSI */ \
  ctrl_outl(0x04040000, INTC_INT2PRI7); /* FLCTL/GPIO/reserve/reserve */ \
}


/* IRL/IRQ[0:7] IRQ number */
#define SH7780_IRQ0_INTNUM	2	/* INTEVT2: 0x220 */
#define SH7780_IRQ1_INTNUM	4	/* INTEVT2: 0x240 */
#define SH7780_IRQ2_INTNUM	6	/* INTEVT2: 0x260 */
#define SH7780_IRQ3_INTNUM	8	/* INTEVT2: 0x280 */
#define SH7780_IRQ4_INTNUM	10	/* INTEVT2: 0x2A0 */
#define SH7780_IRQ5_INTNUM	12	/* INTEVT2: 0x2C0 */
#define SH7780_IRQ6_INTNUM	14	/* INTEVT2: 0x2E0 */
#define SH7780_IRQ7_INTNUM	0	/* INTEVT2: 0x200 */

/*
 * INTEVT code of IRL7:4 is the same as IRL3:0.
 * SH7780_IRL15 is the highest priority
 */
#define SH7780_IRL15_INTNUM	0	/* INTEVT2: 0x200 */
#define SH7780_IRL14_INTNUM	1	/* INTEVT2: 0x220 */
#define SH7780_IRL13_INTNUM	2	/* INTEVT2: 0x240 */
#define SH7780_IRL12_INTNUM	3	/* INTEVT2: 0x260 */
#define SH7780_IRL11_INTNUM	4	/* INTEVT2: 0x280 */
#define SH7780_IRL10_INTNUM	5	/* INTEVT2: 0x2A0 */
#define SH7780_IRL9_INTNUM	6	/* INTEVT2: 0x2C0 */
#define SH7780_IRL8_INTNUM	7	/* INTEVT2: 0x2E0 */
#define SH7780_IRL7_INTNUM	8	/* INTEVT2: 0x300 */
#define SH7780_IRL6_INTNUM	9	/* INTEVT2: 0x320 */
#define SH7780_IRL5_INTNUM	10	/* INTEVT2: 0x340 */
#define SH7780_IRL4_INTNUM	11	/* INTEVT2: 0x360 */
#define SH7780_IRL3_INTNUM	12	/* INTEVT2: 0x380 */
#define SH7780_IRL2_INTNUM	13	/* INTEVT2: 0x3A0 */
#define SH7780_IRL1_INTNUM	14	/* INTEVT2: 0x3C0 */

/* IRL/IRQ[0:7] INTMSK/INTMSKCLR register bit position */
/* SH7780_IRQx_POS is at INTMSK0/INTMSKCLR0 */
#define SH7780_IRQ0_POS		31
#define SH7780_IRQ1_POS		30
#define SH7780_IRQ2_POS		29
#define SH7780_IRQ3_POS		28
#define SH7780_IRQ4_POS		27
#define SH7780_IRQ5_POS		26
#define SH7780_IRQ6_POS		25
#define SH7780_IRQ7_POS		24

/* SH7780_IRLx_POS is at INTMSK2/INTMSKCLR2 */
#define SH7780_IM015_POS		31
#define SH7780_IM014_POS		30
#define SH7780_IM013_POS		29
#define SH7780_IM012_POS		28
#define SH7780_IM011_POS		27
#define SH7780_IM010_POS		26
#define SH7780_IM09_POS			25
#define SH7780_IM08_POS			24
#define SH7780_IM07_POS			23
#define SH7780_IM06_POS			22
#define SH7780_IM05_POS			21
#define SH7780_IM04_POS			20
#define SH7780_IM03_POS			19
#define SH7780_IM02_POS			18
#define SH7780_IM01_POS			17
#define SH7780_IM115_POS		15
#define SH7780_IM114_POS		14
#define SH7780_IM113_POS		13
#define SH7780_IM112_POS		12
#define SH7780_IM111_POS		11
#define SH7780_IM110_POS		10
#define SH7780_IM19_POS			9
#define SH7780_IM18_POS			8
#define SH7780_IM17_POS			7
#define SH7780_IM16_POS			6
#define SH7780_IM15_POS			5
#define SH7780_IM14_POS			4
#define SH7780_IM13_POS			3
#define SH7780_IM12_POS			2
#define SH7780_IM11_POS			1


/* ONCHIP_NR_IRQS */
# define ONCHIP_NR_IRQS		112
# define PINT_NR_IRQS		 0


/* GPIO control register */
#define GPIO_PACR	0xFFEA0000
#define GPIO_PBCR	0xFFEA0002
#define GPIO_PCCR	0xFFEA0004
#define GPIO_PDCR	0xFFEA0006
#define GPIO_PECR	0xFFEA0008
#define GPIO_PFCR	0xFFEA000A
#define GPIO_PGCR	0xFFEA000C
#define GPIO_PHCR	0xFFEA000E
#define GPIO_PJCR	0xFFEA0010
#define GPIO_PKCR	0xFFEA0012
#define GPIO_PLCR	0xFFEA0014
#define GPIO_PMCR	0xFFEA0016

/* GPIO data register */
#define GPIO_PADR	0xFFEA0020
#define GPIO_PBDR	0xFFEA0022
#define GPIO_PCDR	0xFFEA0024
#define GPIO_PDDR	0xFFEA0026
#define GPIO_PEDR	0xFFEA0028
#define GPIO_PFDR	0xFFEA002A
#define GPIO_PGDR	0xFFEA002C
#define GPIO_PHDR	0xFFEA002E
#define GPIO_PJDR	0xFFEA0030
#define GPIO_PKDR	0xFFEA0032
#define GPIO_PLDR	0xFFEA0034
#define GPIO_PMDR	0xFFEA0036

/* GPIO pull-up control register */
#define GPIO_PEPUPR	0xFFEA0048
#define GPIO_PHPUPR	0xFFEA004E
#define GPIO_PJPUPR	0xFFEA0050
#define GPIO_PKPUPR	0xFFEA0052
#define GPIO_PMPUPR	0xFFEA0056
#define GPIO_PPUPR1	0xFFEA0060
#define GPIO_PPUPR2	0xFFEA0062
#define GPIO_PMSELR	0xFFEA0080

#endif /* __ASM_SH_CPU_SH4_SH7780_H */
